
;; Function printf (<unset-asm-name>, funcdef_no=15, decl_uid=758, cgraph_uid=15)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
READONLY = &READONLY
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
__fmt = &PARM_RESTRICT
PARM_RESTRICT = NONLOCAL
ESCAPED = &NONLOCAL
ESCAPED = __fmt
_4 = NONLOCAL
ESCAPED = _4

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
READONLY = { READONLY }
ESCAPED = { ESCAPED NONLOCAL PARM_RESTRICT }
NONLOCAL = { ESCAPED NONLOCAL } same as _4
STOREDANYTHING = { }
INTEGER = { ANYTHING }
__fmt = { PARM_RESTRICT }
PARM_RESTRICT = { ESCAPED NONLOCAL }
__printf_chk = { }
_4 = { ESCAPED NONLOCAL }


Alias information for printf

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to vars: { D.2392 } (includes global vars)

Flow-insensitive points-to information

__fmt_2(D), points-to vars: { D.2392 } (includes global vars)

printf (const char * restrict __fmt)
{
  int _4;

  <bb 2>:
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function main (main, funcdef_no=24, decl_uid=2381, cgraph_uid=24)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
READONLY = &READONLY
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
ESCAPED = &NONLOCAL
ESCAPED = &READONLY
ESCAPED = &NONLOCAL
_9 = NONLOCAL
ESCAPED = &NULL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
READONLY = { READONLY }
ESCAPED = { NULL READONLY ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL } same as _9
STOREDANYTHING = { }
INTEGER = { ANYTHING }
__printf_chk = { }
_9 = { ESCAPED NONLOCAL }


Alias information for main

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information


main ()
{
  int D.2396;
  int i;
  int i.0;
  int _9;

  <bb 2>:
  _9 = __printf_chk (1, "i : %d\n", 4);
  return 0;

}


